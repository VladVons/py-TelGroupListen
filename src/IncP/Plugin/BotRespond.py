#Created:     2025.03.19
#Author:      Vladimir Vons <VladVons@gmail.com>
#License:     GNU, see LICENSE for more details


import logging
from telethon.tl.custom import Button
from . import TPlugin


class TPluginBotRespond(TPlugin):
    def __init__(self, aChat, aConf: dict):
        super().__init__(aConf)

        self.Buttons = [
            [Button.inline('üîç –ü–æ—à—É–∫', b'search')],
            [Button.inline('‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', b'info'), Button.inline('‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è', b'settings')]
        ]

    async def OnNewMessage(self, aEvent):
        logging.info('got it: %s', aEvent.message.text)
        match aEvent.message.text.strip():
            case '/start':
                await aEvent.respond('–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', buttons=self.Buttons)
            case _:
                await aEvent.respond(f'–û—Ç—Ä–∏–º–∞–≤: {aEvent.message.text}')

    async def OnCallbackQuery(self, aEvent):
        Data = aEvent.data.decode("utf-8")
        logging.info('got it: %s', Data)
        match Data:
            case 'search':
                await aEvent.answer('üîç –í–∏ –æ–±—Ä–∞–ª–∏ - –ü–æ—à—É–∫')
                await aEvent.respond('–ü–æ—à—É–∫')
            case _:
                await aEvent.answer('–í–∏ –æ–±—Ä–∞–ª–∏ —â–æ—Å—å —ñ–Ω—à–µ')
